{"version":3,"sources":["hoc/Auxx.js","components/Layout/index.js","components/Burger/BurgerIngredients/index.js","components/Burger/index.js","components/Burger/BuildControls/BuildControl/index.js","components/Burger/BuildControls/index.js","components/UI/Modal/index.js","components/Burger/OrderSummary/index.js","containers/BurgerBuilder/index.js","App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","Layout","Container","maxWidth","BurgerIngredients","ingredients","this","type","className","Component","Burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Typography","variant","display","gutterBottom","label","Button","color","onClick","deleted","disabled","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","purchase","startIcon","Modal","OrderSummary","ingredientsSummary","style","textTransform","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","updatePurchaseState","sum","setState","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","deleteIngredientHandler","priceDeduction","disabledInfo","Grid","container","spacing","item","xs","Paper","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.153a9209.chunk.js","sourcesContent":["const Aux = (props) => props.children;\r\n\r\nexport default Aux;\r\n","import React from \"react\";\r\nimport Aux from \"../../hoc/Auxx\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst Layout = (props) => (\r\n  <Aux>\r\n    <div>toolbar , side drawer , backdrop</div>\r\n    <Container maxWidth=\"lg\">\r\n      <main>{props.children}</main>\r\n    </Container>\r\n  </Aux>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredients extends Component {\r\n  render() {\r\n    let ingredients = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredients = <div className=\"BreadBottom\"></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredients = (\r\n          <div className=\"BreadTop\">\r\n            <div className=\"Seeds1\"></div>\r\n            <div className=\"Seeds2\"></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredients = <div className=\"Meat\"></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredients = <div className=\"Cheese\"></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredients = <div className=\"Bacon\"></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredients = <div className=\"Salad\"></div>;\r\n        break;\r\n      default:\r\n        ingredients = null;\r\n    }\r\n\r\n    return ingredients;\r\n  }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport BurgerIngredients from \"./BurgerIngredients\";\r\n\r\nconst Burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredients key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Burger\">\r\n      <BurgerIngredients type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredients type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst BuildControl = (props) => {\r\n  return (\r\n    <div /*className=\"BuildControl\"*/>\r\n      <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n        {props.label}\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={props.deleted}\r\n        disabled={props.disabled}\r\n      >\r\n        Less\r\n      </Button>\r\n      &nbsp;\r\n      <Button variant=\"contained\" color=\"primary\" onClick={props.added}>\r\n        More\r\n      </Button>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport BuildControl from \"./BuildControl\";\r\nimport \"./style.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n  return (\r\n    <div className=\"BuildControls\">\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Estimated Price: <strong>{props.price.toFixed(2)} LKR</strong>\r\n      </Typography>\r\n      {controls.map((ctrl) => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          type={ctrl.type}\r\n          added={() => props.ingredientAdded(ctrl.type)}\r\n          deleted={() => props.ingredientRemoved(ctrl.type)}\r\n          disabled={props.disabled[ctrl.type]}\r\n        />\r\n      ))}\r\n      <Button\r\n        disabled={!props.purchasable}\r\n        variant=\"contained\"\r\n        onClick={props.purchase}\r\n        startIcon={<ShoppingCartIcon />}\r\n      >\r\n        ORDER NOW\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Modal = (props) => {\r\n  return <div className=\"Modal\">{props.children}</div>;\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nimport Aux from \"../../../hoc/Auxx\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientsSummary = Object.keys(props.ingredients).map((igKey) => {\r\n    return (\r\n      <li key={igKey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order</h3>\r\n      <p>A delecious burger with following ingredients:</p>\r\n      <ul>{ingredientsSummary}</ul>\r\n      <p>Continue to checkout?</p>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxx\";\r\n\r\nimport Burger from \"../../components/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 1.0,\r\n  cheese: 5.0,\r\n  meat: 4.0,\r\n  bacon: 3.0,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      meat: 0,\r\n      cheese: 0,\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n  };\r\n\r\n  updatePurchaseState = (ingredients) => {\r\n    const sum = Object.keys(ingredients)\r\n      .map((igKey) => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n\r\n    this.setState({ purchasable: sum > 0 });\r\n  };\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n\r\n  deleteIngredientHandler = (type) => {\r\n    if (this.state.ingredients[type] > 0) {\r\n      const oldCount = this.state.ingredients[type];\r\n      const updatedCount = oldCount - 1;\r\n      const updatedIngredients = {\r\n        ...this.state.ingredients,\r\n      };\r\n\r\n      updatedIngredients[type] = updatedCount;\r\n      const priceDeduction = INGREDIENT_PRICES[type];\r\n      const oldPrice = this.state.totalPrice;\r\n      const newPrice = oldPrice - priceDeduction;\r\n\r\n      this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n      this.updatePurchaseState(updatedIngredients);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal>\r\n          <OrderSummary ingredients={this.state.ingredients} />\r\n        </Modal>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <Paper style={{ height: \"100%\" }}>\r\n              <Burger ingredients={this.state.ingredients} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper style={{ height: \"100%\" }}>\r\n              <BuildControls\r\n                ingredientRemoved={this.deleteIngredientHandler}\r\n                ingredientAdded={this.addIngredientHandler}\r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice}\r\n                purchasable={this.state.purchasable}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Layout from \"./components/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}